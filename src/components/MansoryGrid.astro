---
import Card from "./Card.astro";

const { images } = Astro.props;

function humanize(str) {
  return str
    .replace(/^[\s_]+|[\s_]+$/g, "")
    .replace(/[_\s]+/g, " ")
    .replace(/^[a-z]/, function (m) {
      return m.toUpperCase();
    });
}

function getFileName(str) {
  const st_idx = str.lastIndexOf("/") + 1;
  const end_idx = str.indexOf(".jpg");

  return str.substring(st_idx, end_idx);
}
---

<script>
  const masonry = () => {
    const portfolio = document.querySelector(".portfolio");
    let column = 3;

    const responsive = [
      {
        breakpoint: 1280,
        column: 3,
      },
      {
        breakpoint: 1024,
        column: 2,
      },
      {
        breakpoint: 768,
        column: 1,
      },
    ];

    const winWidth = window.innerWidth;

    for (let i = 0; i < responsive.length; i++) {
      if (winWidth <= responsive[i].breakpoint) {
        column = responsive[i].column;
      }
    }

    if (column === 1) {
      const listElms = Array.prototype.slice.call(
        portfolio.querySelectorAll("figure"),
        0,
      );
      listElms.forEach((listElm) => {
        listElm.style.marginTop = "";
      });

      return false;
    }

    const listElms = Array.prototype.slice.call(
      portfolio.querySelectorAll("figure"),
      0,
    );

    if (listElms.length === 0) {
      return false;
    }

    listElms.forEach((listElm, index) => {
      listElm.style.marginTop = "";

      if (column > index) {
        return;
      }

      const topListElm = listElms[index - column];
      const topListElmPosi = topListElm.getBoundingClientRect().top;
      const topListHeight = getHeightAndMarginBottom(topListElm);
      const topListBottomPosi = topListElmPosi + topListHeight;
      const listElmPosi = listElm.getBoundingClientRect().top;
      let setPosi: string | number =
        listElmPosi.toFixed(0) - topListBottomPosi.toFixed(0) - 16;

      if (setPosi === 0) {
        return false;
      }

      setPosi = "-" + setPosi + "px";
      listElm.style.marginTop = setPosi;
    });
  };

  const getHeightAndMarginBottom = (elm) => {
    const height = elm.getBoundingClientRect().height;
    const styles = getComputedStyle(elm);
    const bottom = parseFloat(styles.marginBottom);
    return height + bottom;
  };

  masonry();

  window.addEventListener("resize", () => {
    masonry();
  });
  document.addEventListener("DOMContentLoaded", () => {
    masonry();
  });
  document.addEventListener("astro:page-load", () => {
    masonry();
  });
</script>

<div class="relative w-full mt-5 mb-10">
  <div class="clear-both relative">
    <div
      class="grid flex-wrap items-start grid-cols-1 gap-4 lg:grid-cols-3 md:grid-cols-2 portfolio"
    >
      <!--{entry.data.images.map((img, index) =>-->
      <!--  <Card index={index + 1} slug={"slug"} title={img.image_title} image={img.image} tags={[""]} />-->
      <!--)}-->
      {
        images.map((img, index) => (
          <Card
            index={index + 1}
            slug={"slug"}
            title={humanize(getFileName(img.src))}
            image={img}
            tags={[""]}
          />
        ))
      }
    </div>
  </div>
</div>
